package discount;import static constants.SystemConstants.NONE_DISCOUNT;import java.time.DayOfWeek;import java.time.LocalDate;import java.util.List;import menu.MenuCategory;import order.OrderInfo;import validate.EventCaution;public class WeekendDiscount implements DiscountStrategy{    private static WeekendDiscount instance;    private static final int WEEKEND_DISCOUNT_PRICE = 2023;    private WeekendDiscount() {    }    public static WeekendDiscount getInstance() {        if (instance == null) {            instance = new WeekendDiscount();        }        return instance;    }    @Override    public int applyDiscountStrategy(List<OrderInfo> orderInfoList, LocalDate userInputDate) {        if (EventCaution.checkIfEventAccept(orderInfoList) && isDiscountAccept(userInputDate)) {                int mainCount = getMainCount(orderInfoList);                return mainCount * WEEKEND_DISCOUNT_PRICE;        }        return NONE_DISCOUNT;    }    @Override    public boolean isDiscountAccept(LocalDate localDate) {        DayOfWeek dayOfWeekend = localDate.getDayOfWeek();        return dayOfWeekend == DayOfWeek.FRIDAY || dayOfWeekend == DayOfWeek.SATURDAY;    }    private int getMainCount(List<OrderInfo> orderInfoList) {        int mainCount = 0;        for (OrderInfo orderInfo : orderInfoList) {            if (MenuCategory.MAIN.equals(orderInfo.getMenuCategory())) {                mainCount += orderInfo.getQuantity();            }        }        return mainCount;    }}